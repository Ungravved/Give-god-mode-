local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local Player = Players.LocalPlayer

-- GUI Setup
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = Player:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false

-- Main Frame with gradient background, resized
local Frame = Instance.new("Frame")
Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
Frame.Size = UDim2.new(0, 250, 0, 150)  -- Made smaller
Frame.Position = UDim2.new(0.5, -125, 0.5, -75)
Frame.Active = true
Frame.Draggable = true
Frame.Visible = false

-- Add a UIGradient for the frame background
local gradient = Instance.new("UIGradient")
gradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(70, 70, 70)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(40, 40, 40)),
})
gradient.Parent = Frame

-- Rounded Corners for Frame
local FrameCorner = Instance.new("UICorner")
FrameCorner.CornerRadius = UDim.new(0, 15)
FrameCorner.Parent = Frame

-- TextBox for Username Input
local TextBox = Instance.new("TextBox")
TextBox.Parent = Frame
TextBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextBox.Position = UDim2.new(0.1, 0, 0.2, 0)
TextBox.Size = UDim2.new(0.8, 0, 0.2, 0)
TextBox.Font = Enum.Font.GothamSemibold
TextBox.PlaceholderText = "Enter username"
TextBox.Text = ""
TextBox.TextColor3 = Color3.fromRGB(0, 0, 0)
TextBox.TextSize = 16

-- Rounded Corners for TextBox
local TextBoxCorner = Instance.new("UICorner")
TextBoxCorner.CornerRadius = UDim.new(0, 10)
TextBoxCorner.Parent = TextBox

-- Execute Button with smooth color transitions
local TextButton = Instance.new("TextButton")
TextButton.Parent = Frame
TextButton.BackgroundColor3 = Color3.fromRGB(50, 150, 250)
TextButton.Position = UDim2.new(0.1, 0, 0.5, 0)
TextButton.Size = UDim2.new(0.8, 0, 0.25, 0)
TextButton.Font = Enum.Font.GothamBold
TextButton.Text = "TOGGLE GODMODE"
TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton.TextSize = 18
TextButton.BorderSizePixel = 0

local TextButtonCorner = Instance.new("UICorner")
TextButtonCorner.CornerRadius = UDim.new(0, 10)
TextButtonCorner.Parent = TextButton

-- Smooth color transitions on hover for the button
TextButton.MouseEnter:Connect(function()
    TweenService:Create(TextButton, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(40, 130, 240)}):Play()
end)

TextButton.MouseLeave:Connect(function()
    TweenService:Create(TextButton, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(50, 150, 250)}):Play()
end)

-- Toggle Button (fixed position)
local ToggleButton = Instance.new("TextButton")
ToggleButton.Parent = ScreenGui
ToggleButton.BackgroundColor3 = Color3.fromRGB(50, 150, 250)
ToggleButton.Size = UDim2.new(0, 60, 0, 60)
ToggleButton.Position = UDim2.new(0.95, -70, 0.5, -30)
ToggleButton.Font = Enum.Font.GothamBold
ToggleButton.Text = "+"
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.TextSize = 28
ToggleButton.BorderSizePixel = 0
ToggleButton.Active = true
ToggleButton.Draggable = false

local ToggleButtonCorner = Instance.new("UICorner")
ToggleButtonCorner.CornerRadius = UDim.new(0, 15)
ToggleButtonCorner.Parent = ToggleButton

-- Hover effects for the toggle button
ToggleButton.MouseEnter:Connect(function()
    TweenService:Create(ToggleButton, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(40, 130, 240)}):Play()
end)

ToggleButton.MouseLeave:Connect(function()
    TweenService:Create(ToggleButton, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(50, 150, 250)}):Play()
end)

-- Toggle Visibility of Main Frame
ToggleButton.MouseButton1Click:Connect(function()
    Frame.Visible = not Frame.Visible
end)

-- Function to Search for Player by Partial Name (Prioritizing Display Name)
local function GetPlayerByPartialName(partialName)
    partialName = partialName:lower()
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= Player then
            if player.DisplayName:lower():match("^" .. partialName) then
                return player, player.DisplayName  -- Prioritize display name
            elseif player.Name:lower():match("^" .. partialName) then
                return player, player.Name  -- Fallback to username if no display name match
            end
        end
    end
    return nil, nil
end

-- Notification Message Function
local function Message(_Title, _Text, Time)
    game:GetService("StarterGui"):SetCore("SendNotification", {Title = _Title, Text = _Text, Duration = Time})
end

-- Variables for Spam Control
local godmodeActive = false
local spamInterval = 0.1  -- Adjust interval time as needed (seconds)

-- Function to Execute Command on Target
local function ExecuteCommand(targetPlayer)
    local args = {
        [1] = targetPlayer
    }
    game:GetService("ReplicatedStorage").GeneralAbility:FireServer(unpack(args))
end

-- Event to Start/Stop Godmode with Smooth Color Feedback
TextButton.MouseButton1Click:Connect(function()
    local targetPlayer, targetName = GetPlayerByPartialName(TextBox.Text)
    
    if targetPlayer then
        godmodeActive = not godmodeActive  -- Toggle godmode status
        TextButton.Text = godmodeActive and "STOP GODMODE" or "TOGGLE GODMODE"
        
        -- Automatically fill in the full name of the player (DisplayName if exists)
        TextBox.Text = targetName
        
        -- Start Godmode if enabled
        if godmodeActive then
            Message("Godmode Activated", "Applying on " .. targetName, 5)
            spawn(function()
                while godmodeActive do
                    ExecuteCommand(targetPlayer)
                    task.wait(spamInterval)
                end
            end)
        else
            Message("Godmode Deactivated", "Stopped on " .. targetName, 5)
        end
    else
        Message("Error", "Invalid username", 5)
    end
end)

-- Chat Listener for Hiding/Showing the Toggle Button
Players.LocalPlayer.Chatted:Connect(function(msg)
    if msg == "!hide" then
        ToggleButton.Visible = false
        Message("Info", "Toggle button hidden. Type !show to reveal.", 5)
    elseif msg == "!show" then
        ToggleButton.Visible = true
        Message("Info", "Toggle button revealed.", 5)
    end
end)
